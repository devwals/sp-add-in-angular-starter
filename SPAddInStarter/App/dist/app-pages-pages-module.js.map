{"version":3,"sources":["webpack:///./node_modules/ngx-json-viewer/ngx-json-viewer.es5.js","webpack:///./src/app/pages/dashboard/dashboard.component.html","webpack:///./src/app/pages/dashboard/dashboard.component.ts","webpack:///./src/app/pages/dashboard/dashboard.module.ts","webpack:///./src/app/pages/groups/groups.component.html","webpack:///./src/app/pages/groups/groups.component.scss","webpack:///./src/app/pages/groups/groups.component.ts","webpack:///./src/app/pages/groups/groups.module.ts","webpack:///./src/app/pages/lists/lists.component.html","webpack:///./src/app/pages/lists/lists.component.scss","webpack:///./src/app/pages/lists/lists.component.ts","webpack:///./src/app/pages/lists/lists.module.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous-routing.module.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous.component.ts","webpack:///./src/app/pages/miscellaneous/miscellaneous.module.ts","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.html","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.scss","webpack:///./src/app/pages/miscellaneous/not-found/not-found.component.ts","webpack:///./src/app/pages/pages-menu.ts","webpack:///./src/app/pages/pages-routing.module.ts","webpack:///./src/app/pages/pages.component.ts","webpack:///./src/app/pages/pages.module.ts"],"names":[],"mappings":"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","file":"app-pages-pages-module.js","sourcesContent":["import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nvar NgxJsonViewerComponent = /** @class */ (function () {\n    function NgxJsonViewerComponent() {\n        this.expanded = true;\n        /**\n         * @deprecated It will be always true and deleted in version 3.0.0\n         */\n        this.cleanOnChange = true;\n        this.segments = [];\n    }\n    /**\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.ngOnChanges = function () {\n        var _this = this;\n        if (this.cleanOnChange) {\n            this.segments = [];\n        }\n        if (typeof this.json === 'object') {\n            Object.keys(this.json).forEach(function (key) {\n                _this.segments.push(_this.parseKeyValue(key, _this.json[key]));\n            });\n        }\n    };\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.isExpandable = function (segment) {\n        return segment.type === 'object' || segment.type === 'array';\n    };\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.toggle = function (segment) {\n        if (this.isExpandable(segment)) {\n            segment.expanded = !segment.expanded;\n        }\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.parseKeyValue = function (key, value) {\n        var /** @type {?} */ segment = {\n            key: key,\n            value: value,\n            type: undefined,\n            description: '' + value,\n            expanded: this.expanded\n        };\n        switch (typeof segment.value) {\n            case 'number': {\n                segment.type = 'number';\n                break;\n            }\n            case 'boolean': {\n                segment.type = 'boolean';\n                break;\n            }\n            case 'function': {\n                segment.type = 'function';\n                break;\n            }\n            case 'string': {\n                segment.type = 'string';\n                segment.description = '\"' + segment.value + '\"';\n                break;\n            }\n            case 'undefined': {\n                segment.type = 'undefined';\n                segment.description = 'undefined';\n                break;\n            }\n            case 'object': {\n                // yea, null is object\n                if (segment.value === null) {\n                    segment.type = 'null';\n                    segment.description = 'null';\n                }\n                else if (Array.isArray(segment.value)) {\n                    segment.type = 'array';\n                    segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n                }\n                else if (segment.value instanceof Date) {\n                    segment.type = 'date';\n                }\n                else {\n                    segment.type = 'object';\n                    segment.description = 'Object ' + JSON.stringify(segment.value);\n                }\n                break;\n            }\n        }\n        return segment;\n    };\n    return NgxJsonViewerComponent;\n}());\nNgxJsonViewerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-json-viewer',\n                template: \"\\n    <section class=\\\"ngx-json-viewer\\\">\\n      <section\\n        *ngFor=\\\"let segment of segments\\\"\\n        [ngClass]=\\\"['segment', 'segment-type-' + segment.type]\\\">\\n        <section\\n          (click)=\\\"toggle(segment)\\\"\\n          [ngClass]=\\\"{\\n            'segment-main': true,\\n            'expandable': isExpandable(segment),\\n            'expanded': segment.expanded\\n          }\\\">\\n          <div *ngIf=\\\"isExpandable(segment)\\\" class=\\\"toggler\\\"></div>\\n          <span class=\\\"segment-key\\\">{{ segment.key }}</span>\\n          <span class=\\\"segment-separator\\\">:</span>\\n          <span *ngIf=\\\"!segment.expanded || !isExpandable(segment)\\\" class=\\\"segment-value\\\">{{ segment.description }}</span>\\n        </section>\\n        <section *ngIf=\\\"segment.expanded && isExpandable(segment)\\\" class=\\\"children\\\">\\n          <ngx-json-viewer [json]=\\\"segment.value\\\" [expanded]=\\\"expanded\\\"></ngx-json-viewer>\\n        </section>\\n      </section>\\n    </section>\\n  \",\n                styles: [\"\\n    @charset \\\"UTF-8\\\";\\n    .ngx-json-viewer {\\n      font-family: monospace;\\n      font-size: 1em;\\n      width: 100%;\\n      height: 100%;\\n      overflow: hidden;\\n      position: relative; }\\n      .ngx-json-viewer .segment {\\n        padding: 2px;\\n        margin: 1px 1px 1px 12px; }\\n        .ngx-json-viewer .segment .segment-main {\\n          word-wrap: break-word; }\\n          .ngx-json-viewer .segment .segment-main .toggler {\\n            position: absolute;\\n            margin-left: -14px;\\n            margin-top: 3px;\\n            font-size: .8em;\\n            line-height: 1.2em;\\n            vertical-align: middle;\\n            color: #787878; }\\n            .ngx-json-viewer .segment .segment-main .toggler::after {\\n              display: inline-block;\\n              content: \\\"\\u25BA\\\";\\n              -webkit-transition: -webkit-transform 0.1s ease-in;\\n              transition: -webkit-transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\\n          .ngx-json-viewer .segment .segment-main .segment-key {\\n            color: #4E187C; }\\n          .ngx-json-viewer .segment .segment-main .segment-separator {\\n            color: #999; }\\n          .ngx-json-viewer .segment .segment-main .segment-value {\\n            color: #000; }\\n        .ngx-json-viewer .segment .children {\\n          margin-left: 12px; }\\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\\n        color: #FF6B6B; }\\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\\n        color: #009688; }\\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\\n        color: #b938a4; }\\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\\n        color: #05668D; }\\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\\n        color: #fff; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\\n        color: #fff; }\\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\\n        background-color: red; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\\n        background-color: #999; }\\n      .ngx-json-viewer .segment-type-object > .segment-main,\\n      .ngx-json-viewer .segment-type-array > .segment-main {\\n        white-space: nowrap; }\\n      .ngx-json-viewer .expanded > .toggler::after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg); }\\n      .ngx-json-viewer .expandable,\\n      .ngx-json-viewer .expandable > .toggler {\\n        cursor: pointer; }\\n  \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxJsonViewerComponent.ctorParameters = function () { return []; };\nNgxJsonViewerComponent.propDecorators = {\n    'json': [{ type: Input },],\n    'expanded': [{ type: Input },],\n    'cleanOnChange': [{ type: Input },],\n};\nvar NgxJsonViewerModule = /** @class */ (function () {\n    function NgxJsonViewerModule() {\n    }\n    return NgxJsonViewerModule;\n}());\nNgxJsonViewerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxJsonViewerComponent\n                ],\n                exports: [\n                    NgxJsonViewerComponent\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxJsonViewerModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NgxJsonViewerModule, NgxJsonViewerComponent };\n//# sourceMappingURL=ngx-json-viewer.es5.js.map\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card accent=\\\"success\\\" class=\\\"w-100\\\">\\n      <nb-card-header>{{view.web?.Title}} - Host Web Properties</nb-card-header>\\n      <nb-card-body>\\n        <ngx-json-viewer [json]=\\\"view.web\\\"></ngx-json-viewer>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card accent=\\\"success\\\" class=\\\"w-100\\\">\\n      <nb-card-header>Webs ({{view.license?.type}} License)</nb-card-header>\\n      <nb-card-body>\\n        <ngx-json-viewer [expanded]=\\\"false\\\" [json]=\\\"view.webinfos\\\"></ngx-json-viewer>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators/takeWhile';\nimport { SpService } from '../../services/sp.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AppCatalog } from '@pnp/sp';\n\ninterface CardSettings {\n  title: string;\n  iconClass: string;\n  type: string;\n}\n\n@Component({\n  selector: 'ngx-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnDestroy, OnInit {\n  private alive = true;\n  view: any = {};\n\n  lightCard: CardSettings = {\n    title: 'Light',\n    iconClass: 'nb-lightbulb',\n    type: 'primary',\n  };\n  rollerShadesCard: CardSettings = {\n    title: 'Roller Shades',\n    iconClass: 'nb-roller-shades',\n    type: 'success',\n  };\n  wirelessAudioCard: CardSettings = {\n    title: 'Wireless Audio',\n    iconClass: 'nb-audio',\n    type: 'info',\n  };\n  coffeeMakerCard: CardSettings = {\n    title: 'Coffee Maker',\n    iconClass: 'nb-coffee-maker',\n    type: 'warning',\n  };\n\n  statusCards: string;\n\n  commonStatusCardsSet: CardSettings[] = [\n    this.lightCard,\n    this.rollerShadesCard,\n    this.wirelessAudioCard,\n    this.coffeeMakerCard,\n  ];\n\n  statusCardsByThemes: {\n    default: CardSettings[];\n    cosmic: CardSettings[];\n    corporate: CardSettings[];\n  } = {\n      default: this.commonStatusCardsSet,\n      cosmic: this.commonStatusCardsSet,\n      corporate: [\n        {\n          ...this.lightCard,\n          type: 'warning',\n        },\n        {\n          ...this.rollerShadesCard,\n          type: 'primary',\n        },\n        {\n          ...this.wirelessAudioCard,\n          type: 'danger',\n        },\n        {\n          ...this.coffeeMakerCard,\n          type: 'secondary',\n        },\n      ],\n    };\n\n  constructor(private http: HttpClient, private themeService: NbThemeService, private spService: SpService) {\n    this.themeService.getJsTheme()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(theme => {\n        this.statusCards = this.statusCardsByThemes[theme.name];\n      });\n\n    this.spService.loadSP().then(() => {\n      this.spService.cdWeb().get().then((w) => {\n        this.view.web = w;\n        // console.log(\"Web: {0}\", JSON.stringify(w,null,4));\n      });\n      this.spService.cdWeb().webinfos.get().then(l => {\n        this.view.webinfos = l;\n      });\n\n      this.spService.getLicense().then(r => {\n        console.log(r);\n        this.view.license = { allProperties: r };\n        this.spService.getLicenseType().then(r1 => {\n          this.view.license.type = r1;\n        });\n      }).catch(e => {\n        console.log(\"Error loading license!\");\n        console.log(e);\n      });\n\n\n\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { DashboardComponent } from './dashboard.component';\n\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    NgxJsonViewerModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n})\nexport class DashboardModule {\n  constructor() {\n\n    \n\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card accent=\\\"success\\\" class=\\\"w-100\\\">\\n      <nb-card-header>Site Groups</nb-card-header>\\n      <nb-card-body>\\n        <ngx-json-viewer [json]=\\\"view.groups\\\" [expanded]=\\\"false\\\"></ngx-json-viewer>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SpService } from '../../services/sp.service';\n\n@Component({\n  selector: 'groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.scss']\n})\nexport class GroupsComponent implements OnInit {\n  view: any = {};\n  constructor(private spService: SpService) {\n    this.spService.loadSP().then(() => {\n      \n      this.spService.cdWeb().siteGroups.get().then(l=>{\n        this.view.groups = l;\n      });      \n    });\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupsComponent } from './groups.component';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { ThemeModule } from '../../@theme/theme.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxJsonViewerModule,\n    ThemeModule\n  ],\n  declarations: [GroupsComponent]\n})\nexport class GroupsModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card accent=\\\"success\\\" class=\\\"w-100\\\">\\n      <nb-card-header>Lists</nb-card-header>\\n      <nb-card-body>\\n        <ngx-json-viewer [expanded]=\\\"false\\\" [json]=\\\"view.lists\\\"></ngx-json-viewer>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card accent=\\\"success\\\" class=\\\"w-100\\\">\\n      <nb-card-header>Libraries</nb-card-header>\\n      <nb-card-body>\\n        <ngx-json-viewer [expanded]=\\\"false\\\" [json]=\\\"view.libraries\\\"></ngx-json-viewer>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { SpService } from '../../services/sp.service';\n\n@Component({\n  selector: 'lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.scss']\n})\nexport class ListsComponent implements OnInit {\n  view: any = {};\n  constructor(private spService: SpService) {\n    this.spService.loadSP().then(() => {\n      \n      this.spService.cdWeb().lists.get().then(l => {\n        this.view.lists = l.filter(v=>{return v.BaseType == 0;});\n        this.view.libraries = l.filter(v=>{return v.BaseType == 1;});\n      });\n      \n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListsComponent } from './lists.component';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { ThemeModule } from '../../@theme/theme.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemeModule,\n    NgxJsonViewerModule\n  ],\n  declarations: [\n    ListsComponent\n  ]\n})\nexport class ListsModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MiscellaneousComponent } from './miscellaneous.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: MiscellaneousComponent,\n  children: [{\n    path: '404',\n    component: NotFoundComponent,\n  }],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule { }\n\nexport const routedComponents = [\n  MiscellaneousComponent,\n  NotFoundComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-miscellaneous',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class MiscellaneousComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { MiscellaneousRoutingModule, routedComponents } from './miscellaneous-routing.module';\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    ...routedComponents,\n  ],\n})\nexport class MiscellaneousModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <nb-card>\\n      <nb-card-body>\\n        <div class=\\\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\\\">\\n          <h2 class=\\\"title\\\">404 Page Not Found</h2>\\n          <small class=\\\"sub-title\\\">The page you were looking for doesn't exist</small>\\n          <button (click)=\\\"goToHome()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-hero-primary\\\">\\n            Take me home\\n          </button>\\n        </div>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\"","module.exports = \".flex-centered {\\n  margin: auto; }\\n\\nnb-card-body {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex; }\\n\\n.title {\\n  text-align: center; }\\n\\n.sub-title {\\n  text-align: center;\\n  display: block;\\n  margin-bottom: 3rem; }\\n\\n.btn {\\n  margin-bottom: 2rem; }\\n\"","import { NbMenuService } from '@nebular/theme';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(private menuService: NbMenuService) {\n  }\n\n  goToHome() {\n    this.menuService.navigateHome();\n  }\n}\n","import { NbMenuItem } from '@nebular/theme';\n\nexport const MENU_ITEMS: NbMenuItem[] = [\n  {\n    title: 'Home',\n    icon: 'nb-home',\n    link: '/pages/dashboard',\n    home: true,\n  },\n  {\n    title: 'Administration',\n    icon: 'nb-gear',\n    children: [\n      {\n        title: 'Lists & Libraries',\n        link: '/pages/lists'\n      },\n      {\n        title: 'Groups',\n        link: '/pages/groups'\n      }\n    ]\n  },\n  {\n    title: 'Request Feature',\n    icon: 'nb-lightbulb',\n    link: 'https://devwals.com/#contact'\n  },\n  {\n    title: 'Support',\n    icon: 'nb-lightbulb',\n    link: 'https://devwals.com/#contact'\n  }\n];\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { PagesComponent } from './pages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { GroupsComponent } from './groups/groups.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  children: [\n    {\n      path: 'dashboard',\n      component: DashboardComponent,\n    },\n    {\n      path: 'lists',\n      component: ListsComponent,\n    },\n    {\n      path: 'groups',\n      component: GroupsComponent,\n    },\n    {\n      path: '',\n      redirectTo: 'dashboard',\n      pathMatch: 'full',\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {\n}\n","import { Component } from '@angular/core';\n\nimport { MENU_ITEMS } from './pages-menu';\n\n@Component({\n  selector: 'ngx-pages',\n  template: `\n    <ngx-sample-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-sample-layout>\n  `,\n})\nexport class PagesComponent {\n  menu = MENU_ITEMS;\n}\n","import { NgModule } from '@angular/core';\n\nimport { PagesComponent } from './pages.component';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { MiscellaneousModule } from './miscellaneous/miscellaneous.module';\nimport { ListsModule } from './lists/lists.module';\nimport { GroupsModule } from './groups/groups.module';\n\nconst PAGES_COMPONENTS = [\n  PagesComponent,\n];\n\n@NgModule({\n  imports: [\n    PagesRoutingModule,\n    ThemeModule,\n    DashboardModule,\n    ListsModule,\n    GroupsModule,\n    MiscellaneousModule,\n  ],\n  declarations: [\n    ...PAGES_COMPONENTS,\n  ],\n})\nexport class PagesModule {\n}\n"],"sourceRoot":""}